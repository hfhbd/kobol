{
  parserClass="app.softwork.kobol.CobolParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Cobol"
  psiImplClassSuffix="Impl"
  psiPackage="app.softwork.kobol"
  psiImplPackage="app.softwork.kobol.impl"

  elementTypeHolderClass="app.softwork.kobol.CobolTypes"
  elementTypeClass="app.softwork.kobol.CobolElementType"
  tokenTypeClass="app.softwork.kobol.CobolTokenType"

  tokens=[
    lineNumber="regexp:\r?\n\d{6}(\s|\*)"
    varName="regexp:[a-zA-Z]([\w\-_])*"
    space="regexp:\s+"
    comment="regexp:\*.*\r?\n\d{6}(\s|\*)"
    number="regexp:\+?\d*(\.\d*)?"
    string="regexp:('([^'\\]|\\.)*'|\"([^\"\\]|\\.)*\")"
    any="regexp:.*\."
    twoDigits="regexp:\d{2}"
  ]

//  extends(".*_file")=file
}

//root ::= root_item *
//private root_item ::= !<<eof>> exps '.' {pin=1 recoverWhile=exps_recover}
root ::= program

program ::= comments idDiv [envDiv] [dataDiv] procedureDiv

comments ::= (comment) *

DOT ::= '.'
LP ::= '('
RP ::= ')'


idDiv ::= identification division DOT programID [other]
identification ::= 'IDENTIFICATION'
division ::= 'DIVISION'

private other ::= (author | installation | date ) *

programID ::= comments 'PROGRAM-ID' [DOT] varName DOT
author ::= comments 'AUTHOR' anys
installation ::= comments 'INSTALLATION' anys
date ::= comments 'DATE-WRITTEN' anys

anys ::= any *

envDiv ::=  comments environment division DOT [config] [input]
environment ::= 'ENVIRONMENT'
configuration ::= 'CONFIGURATION'
config ::= comments configuration section DOT [specialNames]
specialNamesLiteral ::= 'SPECIAL-NAMES'
specialNames ::= comments specialNamesLiteral DOT [specialNameDeclaration* DOT]
specialNameDeclaration ::= comments specialName
specialName ::= specialNameEnv is specialNameValue
specialNameEnv ::= varName
specialNameValue ::= varName
is ::= 'IS'

inputOutputLiteral ::= 'INPUT-OUTPUT'
input ::= comments inputOutputLiteral section DOT [fileControl]
fileControlLiteral ::= 'FILE-CONTROL'
fileControl ::= comments fileControlLiteral DOT [fileConfig*]
fileConfig ::= comments fileConfigSelect fileConfigAssign fileConfigStatus DOT
fileConfigSelectLiteral ::= 'SELECT'
fileConfigSelect ::= fileConfigSelectLiteral varName
fileConfigAssignLiteral ::= 'ASSIGN'
fileConfigAssign ::= fileConfigAssignLiteral [to] varName
fileLiteral ::= 'FILE'
fileConfigStatusStatusLiteral ::= 'STATUS'
fileConfigStatus ::= fileLiteral fileConfigStatusStatusLiteral varName
section ::= 'SECTION'

dataDiv ::= comments data division DOT comments [fileSection] [workingStorageSection]
data ::= 'DATA'

fileSection ::= comments fileLiteral section DOT fileDescriptions*
fd ::= 'FD'
recordingLiteral ::= 'RECORDING'
labelLiteral ::= 'LABEL'
blockLiteral ::= 'BLOCK'
recordLiteral ::= 'RECORD'
standard ::= 'STANDARD'
recording ::= recordingLiteral varName
block ::= blockLiteral number
fileRecord ::= recordLiteral number
label ::= labelLiteral recordLiteral standard
fileDescriptions ::= fileDescription | record*
fileDescription ::= comments fd varName recording [block] [fileRecord] label dataRecord DOT
dataRecord ::= data recordLiteral varName

workingStorageSection ::= comments workingStorage section DOT stm*
workingStorage ::= 'WORKING-STORAGE'

stm ::= record | exec_sql
exec_sql ::= comments exec sql anys* end_exec DOT
exec ::= 'EXEC'
sql ::= 'SQL'
end_exec ::= 'END-EXEC'

value ::= 'VALUE'
record ::= comments number varName [pic] [COMP | COMP-3] [value var] [occurs_clause] DOT
occurs_clause ::= OCCURS number [TO number] [DEPENDING ON varName]

pic ::= picLiteral (picXA | picS9 | pic9 | picV9) [length] [decimal_length]
picLiteral ::= 'PIC'
picXA ::= 'X' | 'A'
picS9 ::= 'S9'
pic9 ::= '9'
picV9 ::= 'V9'
decimal_length ::= picV9 [length]
length ::= LP number RP

procedureDiv ::= comments procedure division DOT [sentence*] [procedureSection*]
procedure ::= 'PROCEDURE'
procedureSection ::= comments varName section DOT sentence
sentence ::= procedures+ DOT
procedures ::= comments (displaying | moving | performing)
performing ::= PERFORM varName
moving ::= MOVE expr TO varName

expr ::= var | varName | stringConcat

var ::= string | number | SPACE | LOW-VALUE

displaying ::= DISPLAY stringConcat
stringConcat ::= (string | varName) +
