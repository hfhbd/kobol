{
  parserClass="app.softwork.kobol.CobolParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Cobol"
  psiImplClassSuffix="Impl"
  psiPackage="app.softwork.kobol"
  psiImplPackage="app.softwork.kobol.impl"

  elementTypeHolderClass="app.softwork.kobol.CobolTypes"
  elementTypeClass="app.softwork.kobol.CobolElementType"
  tokenTypeClass="app.softwork.kobol.CobolTokenType"

  tokens=[
    varName="regexp:[a-zA-Z]([\w|-]+[\w|_])*"
    space="regexp:\s+"
    comment="regexp:\*.*"
    number="regexp:\d+(\.\d*)?"
    string="regexp:('([^'\\]|\\.)*'|\"([^\"\\]|\\.)*\")"
    any="regexp:.*\."
  ]

//  extends(".*_file")=file
}

//root ::= root_item *
//private root_item ::= !<<eof>> exps '.' {pin=1 recoverWhile=exps_recover}

file ::= (line) *

line ::= exp | COMMENT

exp ::= id | env | data | procedure
DOT ::= '.'
id ::= identification division [DOT] ( programID | author | installation | date ) *
identification ::= 'IDENTIFICATION'
division ::= 'DIVISION'

programID ::= 'PROGRAM-ID' [DOT] varName DOT
author ::= 'AUTHOR' anys
installation ::= 'INSTALLATION' anys
date ::= 'DATE-WRITTEN' anys

anys ::= any *

env ::=  'ENVIRONMENT' 'DIVISION' [DOT] (config | specialNames) *
config ::= 'CONFIGURATION' 'SECTION' DOT
specialNames ::= 'SPECIAL-NAMES' [DOT] (var) * DOT

data ::= 'DATA' 'DIVISION' [DOT]

procedure ::= procedureDiv (display | assignment)* DOT

procedureDiv ::= 'PROCEDURE' 'DIVISION' [DOT]

assignment ::= varName assign var
assign ::= "="
var ::= string | number

display ::= 'DISPLAY' (string | varName)
